// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "cargo prisma"
  output   = "./src/lib.rs"
}

datasource db {
  provider = "postgresql"
  url      = env("db_url")
}

model Organization {
  id         String      @id @unique @default(uuid())
  name       String
  location   String?
  latitude   Float?
  longitude  Float?
  members    Member[]
  applicants Applicant[]
}

model Member {
  id             String       @id @unique @default(uuid())
  role           Role         @default(Base)
  name           String
  email          String       @unique
  password       String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
  applicants     Applicant[]
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  Order          Order[]
}

model Applicant {
  id                    String       @id @unique @default(uuid())
  name                  String
  phoneNumber           String
  status                Status       @default(Ordering)
  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @default(now()) @updatedAt
  member                Member       @relation(fields: [memberId], references: [id])
  memberId              String
  organization          Organization @relation(fields: [organizationId], references: [id])
  organizationId        String
  orders                Order[]
  link                  String?
  linkExp               DateTime?
  linkReady             Boolean      @default(false)
  linkClicked           Boolean      @default(false)
  connectionComplete    Boolean      @default(false)
  linkReadyAt           DateTime?
  linkClickedAt         DateTime?
  connectionCompletedAt DateTime?
}

model Order {
  id          String        @id @unique @default(uuid())
  applicant   Applicant     @relation(fields: [applicantId], references: [id])
  applicantId String
  member      Member        @relation(fields: [memberId], references: [id])
  memberId    String
  product     ProductSku
  price       Float
  timespan    OrderTimespan
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now()) @updatedAt
}

enum Role {
  Base
  Admin
  Owner
}

enum ProductSku {
  BankStatement
  CashflowReport
}

enum Status {
  Ordering // While the request is being processed in the server and records are being created
  Inviting // Sending twilio text
  Connecting // Customer clicked link, trying to connect banks
  ConnectionFailed // Customer failed to connect
  BuildingProducts // Customer connected accounts and server is now using data to create the reports
  ProductsFailed // Products error
  Fulfilled // Products built successfully
}

enum OrderTimespan {
  Month6
  Month12
  Month24
  Month36
  Month48
}
